/*
 * Copyright [2014] [Christian Loehnert, krampenschiesser@gmail.com]
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: "maven-publish"

version = "$applicationLibVersion"

dependencies {
    compile project(":modules:i18n")
    compile project(":modules:images")
    compile project(":modules:launch")
    compile project(":modules:eventsystem")
    compile project(":modules:validation")

    compile "com.fasterxml.jackson.core:jackson-databind:$jackson"
    compile "com.fasterxml.jackson.core:jackson-annotations:$jackson"
    compile "com.fasterxml.jackson.core:jackson-core:$jackson"

    testCompile project(":modules:testutil")

}

def projects = [project(":modules:i18n"), project(":modules:images"), project(":modules:launch"), project(":modules:eventsystem"),
                project(":modules:reflection"), project(":modules:executor"), project(":modules:util")]

def alldependencyprojects = new ArrayList()
alldependencyprojects.addAll(projects)
alldependencyprojects.add(project(":modules:application"))

task sourceJar(type: Jar) {
    from alldependencyprojects.sourceSets.main.allJava
}

task fullJar(type: Jar) {
    dependsOn projects.build, jar
    baseName "$applicationLibTitle"
    alldependencyprojects.each { subproject ->
        from subproject.configurations.archives.allArtifacts.files.collect {
            zipTree(it)
        }
    }
}


task fullJavaDoc(type: Javadoc) {
    title = "$applicationLibTitle $applicationLibVersion"

    source = alldependencyprojects.sourceSets.main.allJava

    options.docletpath = configurations.asciidoclet.files.asType(List)
    options.doclet = 'org.asciidoctor.Asciidoclet'
    options.overview = "src/main/java/overview.adoc"
}

task javadocJar(type: Jar, dependsOn: fullJavaDoc) {
    classifier = 'javadoc'
    from fullJavaDoc.destinationDir
}

